# -*- coding: utf-8 -*-
import scrapy
import re


class JobboleSpider(scrapy.Spider):
    name = "jobbole"
    allowed_domains = ["blog.jobbole.com"]
    start_urls = ['http://blog.jobbole.com/111016/']

    def parse(self, response):
        # xpath 选择器
        # title = response.xpath('//div[@class="entry-header"]/h1/text()').extract()[0]
        # create_time = response.xpath('//p[@class="entry-meta-hide-on-mobile"]/text()').extract()[0].strip().replace(
        #         ' ·', '')
        # zan = int(response.xpath('//span[contains(@class, "vote-post-up")]/h10/text()').extract()[0])
        # fav_re = re.match(r'.*(\d+).*',
        #                   response.xpath('//span[contains(@class, "bookmark-btn")]/text()').extract()[0])
        # if fav_re:
        #     fav = fav_re.group(1)
        # comment_re = re.match(r'.*(\d+).*',
        #                       response.xpath('//a[contains(@href, "#article-comment")]/text()').extract()[0])
        # if comment_re:
        #     comment = comment_re.group(1)
        # content = response.xpath("//div[@class='entry']").extract()[0]
        #
        #
        # tag_list = response.xpath('//p[@class="entry-meta-hide-on-mobile"]/a/text()').extract()
        # tag = [x for x in tag_list if not x.strip().endswith('评论')]
        # print(','.join(tag))


        # css 选择器
        title = response.css('.entry-header h1::text').extract_first('')
        create_time = response.css('p.entry-meta-hide-on-mobile::text').extract()[0].strip().replace(' ·', '')
        zan = int(response.css('.vote-post-up h10::text').extract()[0])
        fav_re = re.match(r'.*(\d+).*', response.css('.bookmark-btn::text').extract()[0])
        if fav_re:
            fav = fav_re.group(1)
        comment_re = re.match(r'.*(\d+).*', response.css('a[href="#article-comment"] span::text').extract()[0])
        if comment_re:
            comment = comment_re.group(1)
        content = response.css("div.entry").extract()[0]
        tag_list = response.css('p.entry-meta-hide-on-mobile a::text').extract()
        tag = [x for x in tag_list if not x.strip().endswith('评论')]
        tags = ','.join(tag)
        print(title)
        pass
